function plot_Decoding_SigShuffle_FromShuffle(decode_fold_shuffle, ...
    decode_fold_label, decode_fold_cat_shuffle,decode_fold_label_cat,...
    dirs,all_labels,decode_fold_shuffle_prob,...
    decode_fold_cat_shuffle_prob,itype,figs_to_run)

% currently using only 1 of these figures for the paper (figure 6)

thisdir = [dirs.figdir '/PopulationVectorsCorrelation/' ...
        'Decoding_SigShuffle_FromShuffle/'];

if ~isfolder(thisdir)
    mkdir(thisdir)
end

trialts = 1:3;
ps = NaN(length(trialts)+2,2);
numshuff = size(decode_fold_shuffle,2);

for tt = 1:length(trialts)
    ps(tt,1) = (sum(mean(decode_fold_shuffle(...
        decode_fold_label(:,1)==trialts(tt),:),'omitnan') >= ...
        mean(decode_fold_label(decode_fold_label(:,1) == ...
        trialts(tt),2),'omitnan'))+1)./(numshuff+1);
    ps(tt,2) = (sum(mean(decode_fold_cat_shuffle(...
        decode_fold_label(:,1)==trialts(tt),:),'omitnan') >= ...
        mean(decode_fold_label_cat(decode_fold_label(:,1) == ...
        trialts(tt),2),'omitnan'))+1)./(numshuff+1);
end

ps(tt+1,1) = (sum(mean(decode_fold_shuffle,'omitnan') >= ...
    mean(decode_fold_label(:,2)),'omitnan')+1)./(numshuff+1);
ps(tt+1,2) = (sum(mean(decode_fold_cat_shuffle,'omitnan') >= ...
    mean(decode_fold_label_cat(:,2),'omitnan'))+1)./(numshuff+1);
ps(tt+2,1) = (sum(mean(decode_fold_shuffle(decode_fold_label(:,1)>2,:)...
    ,'omitnan') >= mean(decode_fold_label(decode_fold_label(:,1)>2,2),...
    'omitnan'))+1)./(numshuff+1);
ps(tt+2,2) = (sum(mean(decode_fold_cat_shuffle(decode_fold_label(:,1) >...
    2,:),'omitnan') >= mean(decode_fold_label_cat(decode_fold_label(:,1)...
    > 2,2),'omitnan'))+1)./(numshuff+1);

     
Improvement = [decode_fold_label(:,3)-mean(decode_fold_shuffle_prob,2) ... 
    decode_fold_label_cat(:,3)-mean(decode_fold_cat_shuffle_prob,2)];
RawDec = [decode_fold_label(:,2) decode_fold_label_cat(:,2)];

[~,~,u] = unique(decode_fold_label(:,5)+100*decode_fold_label(:,6));
udat = NaN(4,max(u)); udat2 = udat;
for iu = 1:max(u)
    inddat = u==iu  & decode_fold_label(:,7)==1; %only correct now
    udat(:,iu) = [mean(Improvement(inddat,:),'omitnan') ...
        mean(decode_fold_label(inddat,8),'omitnan') ...
        unique(decode_fold_label(inddat,6))];            
    udat2(:,iu) = [mean(RawDec(inddat,:),'omitnan') ...
        mean(decode_fold_label(inddat,8),'omitnan') ...
        unique(decode_fold_label(inddat,6))];
end

for idd = 1:2
    for irew = 1:3
        if (sum(ismember(figs_to_run,[0 6]))>0 && irew~=2 && idd==2) || (sum(ismember(figs_to_run,0))>0)
            if idd == 1
                d1 = decode_fold_label; d2 = decode_fold_shuffle; 
                ch = length(trialts);                
                catlabel = 'Individual'; xxl = [0 1];
            else
                d1 = decode_fold_label_cat; d2 = decode_fold_cat_shuffle; 
                ch = 2;
                catlabel = 'Categorical'; xxl = [0 1];
            end
    
            if irew==1
                rewlab = '';
            elseif irew==2
                rewlab = '_rRewardedOnly';
                d1(decode_fold_label(:,7)~=1,:) = [];                    
                d2(decode_fold_label(:,7)~=1,:) = [];
            elseif irew == 3
                rewlab = '_rIncorrectOnly';
                d1(decode_fold_label(:,7)~=0,:) = [];                    
                d2(decode_fold_label(:,7)~=0,:) = [];
            end
            
            aa = figure; hold on        
            for itt = 1:3
                if itt<3
                    dat = d1(d1(:,1)==trialts(itt),2);
                    [~,~,dat2] = unique(d1(d1(:,1)==trialts(itt),6));
                    shuffdat = d2(d1(:,1)==trialts(itt),:);
                    lab1 = all_labels.lablabs{itt}; 
                else
                    dat = d1(d1(:,1)>2,2);
                    [~,~,dat2] = unique(d1(d1(:,1)>2,6)); %mouse for each trial
                    shuffdat = d2(d1(:,1)>2,:);
                    lab1 = all_labels.typelab{itype}; 
                end
                p = (sum(mean(d2(d1(:,1)==trialts(itt),:),'omitnan') >= ...
                    mean(d1(d1(:,1)==trialts(itt),2),'omitnan'))+1)...
                    ./(numshuff+1);
    
                figure(aa)
                Violin(mean(shuffdat,'omitnan'),itt,'ViolinColor',[0 0 0]);
                dat22 = splitapply(@mean,dat,dat2); %take the mean for each mouse (of all trials)
                errorbar(itt,mean(dat22),std(dat22)./sqrt(sum(~isnan(dat22))),'r')
                plot(itt,mean(dat22),'.r','MarkerSize',20)            
                
                if sum(ismember(figs_to_run,0))>0 || irew==3
                    figure; hold on
                    histogram(mean(shuffdat,'omitnan'),'FaceColor','w')
                    yl = get(gca,'ylim');
                    plot([mean(dat,'omitnan') mean(dat,'omitnan')]...
                        ,yl,'k','LineWidth',2)    
                    text(mean(dat,'omitnan'),yl(2)-range(yl)*.5,...
                        ['M = ' num2str(mean(dat,'omitnan'))])
                    plot([1/ch 1/ch],yl,'k--','LineWidth',2)
                    legend({'Shuffle control','Real data','Chance'},...
                        'Location','Best')
                    ylabel('Number of shuffles')
                    xlabel('Proportion correct')
                    xlim(xxl)
                    title([catlabel ', ' lab1 ' trials, p = ' ...
                        num2str(round(p,2,'significant')) rewlab])
        
                    helper_saveandclosefig([thisdir...
                        all_labels.typelab{itype} ...
                        '_Histogram_' lab1 ...
                        '_' catlabel '_' ...
                        all_labels.addon rewlab])      
                end
            end
            
            m = mean(d1(d1(:,1)<4,2),'omitnan');
            n = sum(~isnan(d1(d1(:,1)<4,2)));
            p = (sum(mean(d2(d1(:,1)<4,:),'omitnan') >= ...
                    m)+1)...
                    ./(numshuff+1);
    
            figure(aa)
            axis tight
            set(gca,'xtick',1:3,'xticklabel',all_labels.lablabs)
            ylabel('Proportion correct')
            title([catlabel ' Decoding , p = ' ...
                        num2str(round(p,3,'significant')) ', m = ' num2str(m)  ', n = ' num2str(n) rewlab])
            helper_saveandclosefig([thisdir...
                    all_labels.typelab{itype} ...
                    '_Histogram_All_' ...
                    catlabel '_' ...
                    all_labels.addon rewlab])       
        end
    end
  
    if sum(ismember(figs_to_run,0))>0
        % Improvement
        [r1,p1] = corr(udat(idd,:)',udat(3,:)','rows','complete');  
        %out of the correct ones now
        [r2,p2] = corr(Improvement(decode_fold_label(:,7)==1,idd), ...
            decode_fold_label_cat(decode_fold_label(:,7)==1,8), ...
            'rows','complete');
        [~,tbl] = anovan(Improvement(:,idd),decode_fold_label(:,[1 4:8]) ...
            ,'varnames',{'TrialType','Trial','Session','Mouse','Rewarded','RT'} ...
            ,'continuous',[2,3,6],'display','off');  
        p3 = tbl{7,7}; %Reaction time
        [~,~,stats] = anovan(Improvement(:,idd),decode_fold_label(:,[1 4:7]), ...
            'varnames',{'TrialType','Trial','Session','Mouse','Rewarded'}, ...
            'continuous',[2,3],'display','off');    
        datuse = stats.resid;                      
        if size(datuse,1) == 1
            datuse= datuse';
        end
        [r4,p4] = corr(datuse,decode_fold_label(:,8),'rows','complete');
        
        figure; hold on
        for imouse = 1:max(udat(4,:))
            plot(udat(idd,udat(4,:)==imouse),udat(3,udat(4,:)==imouse),'o')
        end
        xlabel(['Decoding ' catlabel ', improvement over shuffle'])
        ylabel('Lick reaction time (ms)')
        yl = get(gca,'ylim'); xl = get(gca,'xlim');
        title([catlabel ' , Residual R = ' num2str(round(r4,2,'significant')) ...
            ', P = ' num2str(round(p4,2,'significant')) ', AnovaP = ' ...
            num2str(round(p3,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.9,['Sessions: R = ' ...
            num2str(round(r1,2,'significant')) ', P = ' ...
            num2str(round(p1,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.8,['All: R = ' ...
            num2str(round(r2,2,'significant')) ', P = ' ...
            num2str(round(p2,2,'significant'))]) 
    
        helper_saveandclosefig([thisdir all_labels.typelab{itype} ...
        '_DecodingImprovement_ReactionTimes_' catlabel '_' all_labels.addon])  
        
        
        figure; hold on
        for imouse = 1:max(udat(4,:))
            plot(Improvement(decode_fold_label(:,7)==1 & u==imouse,idd), ...
                decode_fold_label(decode_fold_label(:,7)==1  & u==imouse,8) ...
                ,'o')
        end
        xlabel(['Decoding ' catlabel ', improvement over shuffle'])
        ylabel('Lick reaction time (ms)')
        yl = get(gca,'ylim'); xl = get(gca,'xlim');
        title([catlabel ' , Residual R = ' num2str(round(r4,2,'significant')) ...
            ', P = ' num2str(round(p4,2,'significant')) ', AnovaP = ' ...
            num2str(round(p3,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.9,['Sessions: R = ' ...
            num2str(round(r1,2,'significant')) ', P = ' ...
            num2str(round(p1,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.8,['All: R = ' ...
            num2str(round(r2,2,'significant')) ', P = ' ...
            num2str(round(p2,2,'significant'))])    
         helper_saveandclosefig([thisdir all_labels.typelab{itype} ...
                    '_DecodingImprovement_ReactionTimes_EachTrial_' ...
                    catlabel '_' all_labels.addon])  
        
        
        %Raw decoding accuracy
        [r1,p1] = corr(udat2(idd,:)',udat2(3,:)','rows','complete');   
        %out of the correct ones now
        [r2,p2] = corr(RawDec(decode_fold_label(:,7)==1,idd), ...
            decode_fold_label(decode_fold_label(:,7)==1,8),'rows','complete');
        [~,tbl] = anovan(RawDec(:,idd),decode_fold_label(:,[1 4:8]), ...
            'varnames',{'TrialType','Trial','Session','Mouse','Rewarded','RT'}, ...
            'continuous',[2,3,6],'display','off');  
        p3 = tbl{7,7}; %reaction time
        [~,~,stats] = anovan(RawDec(:,idd),decode_fold_label(:,[1 4:7]) ...
            ,'varnames',{'TrialType','Trial','Session','Mouse','Rewarded'}, ...
            'continuous',[2,3],'display','off');    
        datuse = stats.resid;         
        if size(datuse,1) == 1
            datuse= datuse';
        end
        [r4,p4] = corr(datuse,decode_fold_label(:,8),'rows','complete');
        
        figure; hold on
        for imouse = 1:max(udat2(4,:))
            plot(udat2(idd,udat2(4,:)==imouse),udat2(3,udat2(4,:)==imouse),'o')
        end
        xlabel(['Decoding ' catlabel ', improvement over shuffle'])
        ylabel('Lick reaction time (ms)')
        yl = get(gca,'ylim'); xl = get(gca,'xlim');
        title([catlabel ' , Residual R = ' ...
            num2str(round(r4,2,'significant')) ', P = ' ...
            num2str(round(p4,2,'significant')) ', AnovaP = ' ...
            num2str(round(p3,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.9,['Sessions: R = ' ...
            num2str(round(r1,2,'significant')) ', P = ' ...
            num2str(round(p1,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.8,['All: R = ' ...
            num2str(round(r2,2,'significant')) ', P = ' ...
            num2str(round(p2,2,'significant'))])        
         helper_saveandclosefig([thisdir all_labels.typelab{itype} ...
                    '_DecodingRaw_ReactionTimes_' catlabel...
                    '_' all_labels.addon])  
        
        
        figure; hold on
        for imouse = 1:max(udat2(4,:))
            plot(RawDec(decode_fold_label(:,7)==1 & u==imouse,idd), ...
                decode_fold_label(decode_fold_label(:,7)==1  & u==imouse,8), ...
                'o')
        end
        xlabel(['Decoding ' catlabel ', improvement over shuffle'])
        ylabel('Lick reaction time (ms)')
        yl = get(gca,'ylim'); xl = get(gca,'xlim');
        title([catlabel ' , Residual R = ' ...
            num2str(round(r4,2,'significant')) ', P = ' ...
            num2str(round(p4,2,'significant')) ', AnovaP = ' ...
            num2str(round(p3,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.9,['Sessions: R = ' ...
            num2str(round(r1,2,'significant')) ', P = ' ...
            num2str(round(p1,2,'significant'))])
        text(xl(1)+range(xl)*.3,yl(1)+range(yl)*.8,['All: R = ' ...
            num2str(round(r2,2,'significant')) ', P = ' ...
            num2str(round(p2,2,'significant'))])
         helper_saveandclosefig([thisdir all_labels.typelab{itype} ...
                    '_DecodingRaw_ReactionTimes_EachTrial_' catlabel '_' ...
                    all_labels.addon])  
    end
                   

end


if sum(ismember(figs_to_run,0))>0
    Improvement = [decode_fold_label(:,3)-mean(decode_fold_shuffle_prob,2) ...
        decode_fold_label_cat(:,3)-mean(decode_fold_cat_shuffle_prob,2)];
    for itt = 1:length(trialts)
        [~,tbl1] = anovan( ...
            Improvement(decode_fold_label(:,1)==trialts(itt),1), ...
            decode_fold_label(decode_fold_label(:,1)==trialts(itt),4:7), ...
            'varnames',{'Trial','Session','Mouse','Rewarded'},'continuous', ...
            1:2,'display','off');  
        [r1,p1] = corr( ...
            Improvement(decode_fold_label(:,1)==trialts(itt),1), ...
            decode_fold_label(decode_fold_label(:,1)==trialts(itt),5), ...
            'rows','complete');
    
        [~,tbl2] = anovan( ...
            Improvement(decode_fold_label(:,1)==trialts(itt),2), ...
            decode_fold_label(decode_fold_label(:,1)==trialts(itt),4:7), ...
            'varnames',{'Trial','Session','Mouse','Rewarded'}, ...
            'continuous',1:2,'display','off');  
        [r2,p2] = corr( ...
            Improvement(decode_fold_label(:,1)==trialts(itt),2), ...
            decode_fold_label(decode_fold_label(:,1)==trialts(itt),5), ...
            'rows','complete');
    
    
        figure; hold on
        text(.02,.95,[ all_labels.typelab{itype} ' experiment, ' ...
            all_labels.lablabs{itt} ' trials, shuffle N = ' ...
            num2str(numshuff)])
        text(.02,.85,'Decoding the trial type:')
        T1 = text(.06,.8,['Overall shuffle p-value in ' ...
            all_labels.typelab{itype} ' experiment: p = ' ...
            num2str(ps(end-1,1))]);
        if ps(end-1,1)<0.05; T1.FontWeight = 'bold'; end
        T2 = text(.06,.75,['All ' all_labels.lablabs{itt} ...
            ' trials, p = ' num2str(ps(itt,1))]);
        if ps(itt,1)<0.05; T2.FontWeight = 'bold'; end
        T3 = text(.1,.7,[all_labels.lablabs{itt} [' trials, ' ...
            'Change over sessions:  r = '] ...
            num2str(round(r1,3,'significant')) ', p = ' ...
            num2str(round(p1,3,'significant'))]);
    
        if p1<0.05; T3.FontWeight = 'bold'; 
            if r1>0; T3.Color = 'r'; 
            elseif r1<0
                T3.Color = 'b'; 
            end
        end
    
        T4 = text(.1,.65,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions Anovan, p = ' ...
            num2str(round(tbl1{3,7},3,'significant'))]);
        if tbl1{3,7}<0.05; T4.FontWeight = 'bold'; end        
        text(.02,.55,'Decoding T/NT:')
        T5 = text(.06,.5,['Overall shuffle p-value in ' ...
            all_labels.typelab{itype} ' experiment: p = ' ...
            num2str(ps(end-1,2))]);
          if ps(end-1,2)<0.05; T5.FontWeight = 'bold'; end
        T6 = text(.06,.45,['All ' all_labels.lablabs{itt} ...
            ' trials, p = ' num2str(ps(itt,2))]);
         if ps(itt,2)<0.05; T6.FontWeight = 'bold'; end
        T7 = text(.1,.4,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions:  r = ' ...
            num2str(round(r2,3,'significant')) ', p = ' ...
            num2str(round(p2,3,'significant'))]);
         if p2<0.05; T7.FontWeight = 'bold'; 
             if r2>0; T7.Color = 'r'; 
             elseif r2<0; T7.Color = 'b'; 
             end
         end
        T8 = text(.1,.35,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions Anovan, p = ' ...
            num2str(round(tbl2{3,7},3,'significant'))]);
         if tbl2{3,7}<0.05; T8.FontWeight = 'bold'; end         
        axis off
    
         helper_saveandclosefig([thisdir all_labels.typelab{itype} '_' ...
             all_labels.lablabs{itt} '_Anovan_table_' all_labels.addon])    
    end
    
    [~,tbl1] = anovan(Improvement(decode_fold_label(:,1)>2,1), ...
        decode_fold_label(decode_fold_label(:,1)>2,4:7),'varnames', ...
        {'Trial','Session','Mouse','Rewarded'},'continuous',[1,2], ...
        'display','off');  
    [r1,p1] = corr(Improvement(decode_fold_label(:,1)>2,1), ...
        decode_fold_label(decode_fold_label(:,1)>2,5),'rows','complete');
    
    [~,tbl2] = anovan(Improvement(decode_fold_label(:,1)>2,2), ...
        decode_fold_label(decode_fold_label(:,1)>2,4:7),'varnames', ...
        {'Trial','Session','Mouse','Rewarded'},'continuous', ...
        [1,2],'display','off');  
    [r2,p2] = corr(Improvement(decode_fold_label(:,1)>2,2), ...
        decode_fold_label(decode_fold_label(:,1)>2,5),'rows','complete');
    
    figure; hold on
    text(.02,.95,[ all_labels.typelab{itype} [' experiment, all ' ...
        ''] all_labels.typelab{itype} ' trials, shuffle N = ' ...
        num2str(numshuff)])
    text(.02,.85,'Decoding the trial type:')
    T1 = text(.06,.8,['Overall shuffle p-value in ' ...
        all_labels.typelab{itype} ' experiment: p = ' num2str(ps(end-1,1))]);
    if ps(end-1,1)<0.05; T1.FontWeight = 'bold'; end
    T2 = text(.06,.75,['All ' all_labels.typelab{itype} ' trials, p = ' ...
        num2str(ps(end,1))]);
    if ps(end,1)<0.05; T2.FontWeight = 'bold'; end
    T3 = text(.1,.7,[ all_labels.typelab{itype} ...
        ' trials, Change over sessions:  r = ' ...
        num2str(round(r1,3,'significant')) ', p = ' ...
        num2str(round(p1,3,'significant'))]);
    if p1<0.05; T3.FontWeight = 'bold'; 
        if r1>0; T3.Color = 'r'; 
        elseif r1<0; T3.Color = 'b'; 
        end
    end
    T4 = text(.1,.65,[ all_labels.typelab{itype} ...
        ' trials, Change over sessions Anovan, p = ' ...
        num2str(round(tbl1{3,7},3,'significant'))]);
    if tbl1{3,7}<0.05; T4.FontWeight = 'bold'; end        
    text(.02,.55,'Decoding T/NT:')
    T5 = text(.06,.5,['Overall shuffle p-value in ' ...
        all_labels.typelab{itype} ' experiment: p = ' num2str(ps(end-1,2))]);
      if ps(end-1,2)<0.05; T5.FontWeight = 'bold'; end
    T6 = text(.06,.45,['All ' all_labels.typelab{itype} ...
        ' trials, p = ' num2str(ps(end,2))]);
     if ps(end,2)<0.05; T6.FontWeight = 'bold'; end
    T7 = text(.1,.4,[ all_labels.typelab{itype} ...
        ' trials, Change over sessions:  r = ' ...
        num2str(round(r2,3,'significant')) ', p = ' ...
        num2str(round(p2,3,'significant'))]);
     if p2<0.05; T7.FontWeight = 'bold'; 
         if r2>0; T7.Color = 'r'; 
         elseif r2<0; T7.Color = 'b'; 
         end 
     end
    T8 = text(.1,.35,[ all_labels.typelab{itype} ...
        ' trials, Change over sessions Anovan, p = ' ...
        num2str(round(tbl2{3,7},3,'significant'))]);
     if tbl2{3,7}<0.05; T8.FontWeight = 'bold'; end         
    axis off
    
     helper_saveandclosefig([thisdir all_labels.typelab{itype} '_All' ...
         all_labels.typelab{itype} '_Anovan_table_' all_labels.addon])           
    
    
    for itt = 1:length(trialts)
        ind = decode_fold_label(:,1)==trialts(itt) & decode_fold_label(:,7)==1;
        [~,tbl1] = anovan(Improvement(ind,1),decode_fold_label(ind,4:6), ...
            'varnames',{'Trial','Session','Mouse'},'continuous',[1,2], ...
            'display','off');  
        [r1,p1] = corr(Improvement(ind,1),decode_fold_label(ind,5), ...
            'rows','complete');
       
    
        [~,tbl2] = anovan(Improvement(ind,2),decode_fold_label(ind,4:6), ...
            'varnames',{'Trial','Session','Mouse'},'continuous',[1,2], ...
            'display','off');  
        [r2,p2] = corr(Improvement(ind,2),decode_fold_label(ind,5), ...
            'rows','complete');
    
        figure; hold on
        text(.02,.95,[ all_labels.typelab{itype} ' experiment, ' ...
            all_labels.lablabs{itt} ' trials, shuffle N = ' ...
            num2str(numshuff) ', Rewarded Only'])
        text(.02,.85,'Decoding the trial type:')
        T1 = text(.06,.8,['Overall shuffle p-value in ' ...
            all_labels.typelab{itype} ' experiment: p = ' ...
            num2str(ps(end-1,1))]);
        if ps(end-1,1)<0.05; T1.FontWeight = 'bold'; end
        T2 = text(.06,.75,['All ' all_labels.lablabs{itt} ' trials, p = ' ...
            num2str(ps(itt,1))]);
        if ps(itt,1)<0.05; T2.FontWeight = 'bold'; end
        T3 = text(.1,.7,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions:  r = ' ...
            num2str(round(r1,3,'significant')) ', p = ' ...
            num2str(round(p1,3,'significant'))]);
        if p1<0.05; T3.FontWeight = 'bold'; 
            if r1>0; T3.Color = 'r'; 
            elseif r1<0; T3.Color = 'b'; 
            end
        end
        T4 = text(.1,.65,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions Anovan, p = ' ...
            num2str(round(tbl1{3,7},3,'significant'))]);
        if tbl1{3,7}<0.05; T4.FontWeight = 'bold'; end        
        text(.02,.55,'Decoding T/NT:')
        T5 = text(.06,.5,['Overall shuffle p-value in ' ...
            all_labels.typelab{itype} ' experiment: p = ' ...
            num2str(ps(end-1,2))]);
          if ps(end-1,2)<0.05; T5.FontWeight = 'bold'; end
        T6 = text(.06,.45,['All ' all_labels.lablabs{itt} ' trials, p = ' ...
            num2str(ps(itt,2))]);
         if ps(itt,2)<0.05; T6.FontWeight = 'bold'; end
        T7 = text(.1,.4,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions:  r = ' ...
            num2str(round(r2,3,'significant')) ', p = ' ...
            num2str(round(p2,3,'significant'))]);
         if p2<0.05; T7.FontWeight = 'bold'; 
             if r2>0; T7.Color = 'r'; 
             elseif r2<0; T7.Color = 'b'; 
             end 
         end
        T8 = text(.1,.35,[all_labels.lablabs{itt} ...
            ' trials, Change over sessions Anovan, p = ' ...
            num2str(round(tbl2{3,7},3,'significant'))]);
         if tbl2{3,7}<0.05; T8.FontWeight = 'bold'; end         
        axis off
    
         helper_saveandclosefig([thisdir all_labels.typelab{itype} ...
             '_' all_labels.lablabs{itt} '_Anovan_table_' ...
             all_labels.addon '_RewardedOnly'])    
    end
end